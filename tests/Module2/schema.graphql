input CustomerInput {
    name: String!
}

extend input CreateUserInput {
    customer: CustomerInput!
}

extend type User {
    name: String!
}

extend type Query {
    pingFromModule2(da: Boolean!): PingResponse!
}

type PingResponseSuccess {
    success: Boolean!
}

type PingResponseFailure {
    message: String!
}

union PingResponse = PingResponseSuccess | PingResponseFailure

extend enum Enum1 {
    VAL3
    VAL4
}

type TestError1 {
    message: String!
}


extend type CreateUserSuccess {
    fieldFromModule2: String
}



